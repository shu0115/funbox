.container{ style: 'width: 900px'}
  %h2= link_to @playlist.name, playlist_path(@playlist)

  %h4
    Selected by
    = @playlist.user.try(:name)

    - if @playlist.playlist_id.present?
      = ", From"
      = link_to @playlist.playlist.name, user_playlist_path(@playlist.playlist.user_id, @playlist.playlist_id)


- # Play All
#tracks
  #play_all_area
    - if @tracks.present?
      - # Play All
      .text-center
        %iframe{ width: "854", height: "510", src: "https://www.youtube.com/embed/?playlist=#{@unique_ids.join(',')}&loop=1", frameborder: "0", allowfullscreen: true}
        %br
        %br
        %p
          = link_to 'Shuffle', user_playlist_path(@user, @playlist, shuffle: true), class: 'btn btn-primary'
          - if current_user.present?
            %span#playlist_good_button
              = render partial: '/users/playlist_good', locals: { playlist: @playlist }

            - fork_playlist = Playlist.mine(current_user).find_by(playlist_id: @playlist.id)
            - if fork_playlist.present?
              - # フォーク済みプレイリストへのリンク
              = link_to 'Fork', playlist_path(fork_playlist), class: 'btn btn-info'
            - else
              - # フォーク実行
              = link_to 'Fork', fork_playlist_path(@playlist), method: :post, class: 'btn btn-info'
          - else
            = link_to 'Sign in', "/auth/twitter", class: 'btn btn-primary'
        %br

  #track_list_area
    - if @tracks.present?
      %table
        - tracks_hash = @tracks.index_by{ |x| x.unique_id }
        - @unique_ids.each_slice(4) do |ids|
          %tr
          - ids.each do |id|
            - track = tracks_hash[id]
            %td{ style: 'padding: 5px;' }
              = link_to "https://www.youtube.com/watch?v=#{track.unique_id}", target: '_blank', rel: "popover", data: { toggle: "popover", original_title: "", content: track.title } do
                = image_tag track.thumbnail_url, width: "280", height: "157"
              %div{ style: 'text-align: right; padding: 5px 0px 0px 0px;' }
                = link_to "Delete", playlist_track_path(playlist_id: track.playlist_id, id: track.id), data: { confirm: "「#{track.title}」を削除します。よろしいですか？", method: 'delete', remote: true, update_target: "tracks" }, class: 'btn btn-danger btn-xs'
